<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
    Copyright 2014-2022 Bloomreach

    Licensed under the Apache License, Version 2.0 (the  "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS"
    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<document>
  <properties>
    <title>Hippo CMS External Document Picker Base</title>
  </properties>
  <body>
    <section name="Hippo CMS External Document Picker Base">
      <p>
        This project provides base external document picker Wicket plugins and OpenUI Extension based plugins
        for Hippo CMS with simple example implementations for developer's references.
      </p>
      <p>
        This project contains various external document pickers for different use cases:
      </p>
      <ol>
        <li>
          <a href="openui-field/architecture.html">OpenUI External Document Field Picker</a>
          (for use cases to select metadata of external content for CMS document fields)
          <ul>
            <li>
              (a) <a href="openui-field/dev-howto-openui-listview.html">OpenUI Flat List View Picker Option</a>
              (for use cases with general list views or search results to select from,
              using <a href="https://documentation.bloomreach.com/14/library/concepts/open-ui/open-ui-document-field-extensions.html">OpenUI Field Extension</a>)
            </li>
            <li>
              (b) <a href="openui-field/dev-howto-openui-treeview.html">OpenUI Tree List View Picker Option</a>
              (for use cases with hierarchically organized content such as external taxonomy data,
              using <a href="https://documentation.bloomreach.com/14/library/concepts/open-ui/open-ui-document-field-extensions.html">OpenUI Field Extension</a>)
            </li>
          </ul>
        </li>
        <li>
          <a href="field/architecture.html">External Document Field Picker</a>
          (for use cases to select metadata of external content for CMS document fields)
          <ul>
            <li>
              (a) <a href="field/dev-howto-listview.html">Flat List View Picker Option</a>
              (for use cases with general list views or search results to select from,
              using traditional Wicket plugins)
            </li>
            <li>
              (b) <a href="field/dev-howto-treeview.html">Tree List View Picker Option</a>
              (for use cases with hierarchically organized content such as external taxonomy data,
              using traditional Wicket plugins)
            </li>
          </ul>
        </li>
        <li>
          <a href="folder/architecture.html">External Picker Folder Context Menu</a>
          (for use cases to implement a custom behavior on a folder context menu or
           add metadata of external content for CMS folder)
          <ul>
            <li>
              (a) <a href="folder/dev-howto-listview.html">Flat List View Picker Option</a>
              (for use cases with general list views or search results to select from)
            </li>
            <li>
              (b) <a href="folder/dev-howto-treeview.html">Tree List View Picker Option</a>
              (for use cases with hierarchically organized content such as external taxonomy data)
            </li>
          </ul>
        </li>
        <li>
          <a href="richtext-ckeditor/architecture.html">External Link Picker Button in the RichText Editor</a>
          (for use cases with genral list views or search results to select from in CKEditor fields)
        </li>
      </ol>
      <subsection name="External Document Field Picker">
        <p>
          External Document Field Picker allows developers to define their own domain specific models to search/select
          external document(s) for a field of a CMS document.
          Developers can simply use this forge module plugin class and configurations
          with injecting their own
          <a href="apidocs/org/onehippo/forge/exdocpicker/api/ExternalDocumentServiceFacade.html" target="_blank">org.onehippo.forge.exdocpicker.api.ExternalDocumentServiceFacade</a>
          implementation class.
        </p>
        <p>
          External Document Field Picker may show either <strong><i>Flat List View</i></strong> or
          <strong><i>Tree List View</i></strong> for the backend data
          in the picker dialog, depending on configurations and implementations.
          If you want to show a <strong><i>Tree List View</i></strong> in the picker dialog instead of the default
          <strong><i>Flat List View</i></strong>, you need to use slightly
          different plugin configurations and your
          <a href="apidocs/org/onehippo/forge/exdocpicker/api/ExternalDocumentServiceFacade.html" target="_blank">org.onehippo.forge.exdocpicker.api.ExternalDocumentServiceFacade</a>
          implementation class must implement the three more operations defined in
          <a href="apidocs/org/onehippo/forge/exdocpicker/api/ExternalDocumentTreeService.html" target="_blank">org.onehippo.forge.exdocpicker.api.ExternalDocumentTreeService</a>
          additionally, in order to provide hierarchical information resolutions on the searched external backend data.
        </p>
        <p>
          For detail, please see <a href="field/architecture.html">Architecture</a>,
          <a href="field/dev-howto-listview.html">Developers How-to (Flat List View)</a>
          and <a href="field/dev-howto-treeview.html">Developers How-to (Tree List View)</a> pages.
        </p>
      </subsection>
      <subsection name="External Link Picker Button in RichText Editor">
        <p>
          This plugin module allows developers to define their own domain specific models to search/select external document(s)
          in RichText Editor (CKEditor) fields through your own REST Services.
          Developers can simply add this forge module dependency and add extra CKEditor module configurations for RichText editor configuration(s).
        </p>
        <p>
          For detail, please see <a href="richtext-ckeditor/architecture.html">Architecture</a> and
          <a href="richtext-ckeditor/dev-howto.html">Developers How-to</a> pages.
        </p>
      </subsection>
    </section>
    <section name="Demo Application">
      <subsection name="Build and run the demo project">
        <p>You can check out, build and run demo application from the demo folder. It contains all the examples explained in this site documentation.</p>
        <p>Here are example commands to check out, build and run demo application:</p>
        <div class="brush: bash">
          <source><![CDATA[
  $ cd demo
  $ mvn clean verify
  $ mvn -P cargo.run
          ]]></source>
        </div>
        <p>
          Visit http://localhost:8080/cms/.
        </p>
      </subsection>
    </section>
    <section name="Testing OpenUI External Document Field Picker with Demo Application">
      <p>
        Log on to the CMS application and open an events document.
        You will see two fields referring to some external documents below. ('Related Article' field and 'Related Category' field)
      </p>
      <img src="images/exdocpickerbase-openui-screenshot01.png" alt="Edit Events document" />
      <p>&nbsp;</p>
      <img src="images/exdocpickerbase-openui-screenshot02.png" alt="Select an item from the flat list view" />
      <p>&nbsp;</p>
      <img src="images/exdocpickerbase-openui-screenshot03.png" alt="Select an item from the tree view" />
    </section>
    <section name="Testing External Document Field Picker with Demo Application">
      <p>
        Log on to the CMS application and open a news article document.
        You will see two fields referring to some external documents below. ('Introductory External Document' field and 'Related External Documents' field)
      </p>
      <img src="images/exdocpickerbase-screenshot-01.png" alt="Edit News Article" />
      <p>
        If you edit the document, then you will be able to click on 'Browse...' button for each field to see the following popup dialog.
        You can search and browse your domain specific external documents there based on your service class implementation.
        If you select external document(s) and click on the OK button, then the field will be set to those selected external documents.
      </p>
      <img src="images/exdocpickerbase-screenshot-02.png" alt="Search and Browse External Documents" />
      <p>
        If a field is configured to support <strong><i>Tree List View</i></strong> picker dialog mode, then
        the plugin may show a tree list view like the following on 'Browse...' button clicked.
        You can expand or collapse your domain specific external tree data there based on your service class implementation.
        If you select external tree item(s) and click on the OK button, then the field will be set to those selected external documents.
      </p>
      <img src="images/exdocpickerbase-screenshot-03.png" alt="Navigate External Documents through Tree List View" />
    </section>
    <section name="Testing External Picker Folder Context Menu Item with Demo Application">
      <p>
        Select a document folder and pull down the folder context menu.
      </p>
      <img src="images/exdocpickerbase-folder-screenshot-01.png" alt="Edit News Article" />
      <p>
        When you select 'Add External Categories ...' context menu item, you will see the dialog like the following screenshot.
        This is configured with the <strong><i>Tree List View</i></strong> picker dialog mode just as an example.
      </p>
      <img src="images/exdocpickerbase-folder-screenshot-02.png" alt="Search and Browse External Documents" />
      <p>
        If you select some items and click on 'OK' button in the dialog, it will save extra property in the selected
        folder node with the metadata of the selected items.
        However, please note that this example is only for demonstration purpose to show how easily you can
        add a custom folder context menu item for a custom behavior in your use cases.
      </p>
      <p>
        In practical use cases, you might want to create documents, images or assets based on the metadata from
        the user's selection under the selected folder instead of writing properties directly on the selected folder,
        for example.
        It is totally up to your
        <a href="apidocs/org/onehippo/forge/exdocpicker/api/ExternalDocumentServiceFacade.html" target="_blank">org.onehippo.forge.exdocpicker.api.ExternalDocumentServiceFacade</a>
        implementation class in the end anyway.
      </p>
    </section>
    <section name="Testing External Link Picker Button in the RichText Editor with Demo Application">
      <p>
        Log on to the CMS application and open a news article document to edit the "Content" RichText field.
        If you select a text and click on the "Link to Hippo Blog Articles" (next to "Anchor" button),
        then you will see the following popup dialog to search external documents.
      </p>
      <img src="images/exdocpickerbase-richtext-screenshot-01.png" alt="Popup Link to Hippo Blog Articles" />
      <p>
        If you select an item and click on OK button, then you will see the text linked with the external document information.
      </p>
      <img src="images/exdocpickerbase-richtext-screenshot-02.png" alt="Link created to a Hippo Blog Article" />
    </section>
  </body>
</document>
